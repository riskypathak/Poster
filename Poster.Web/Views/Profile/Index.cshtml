@model Poster.Data.Models.Profile
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userProfileList = ViewBag.userProfileList;

}

<h2>Profile</h2>
@using (Html.BeginForm("Add", "Profile", FormMethod.Post, new { id ="profileform"}))
{
    <div class="panel panel-default">
        <div class="panel-heading">Add Profile</div>
        <div class="panel-body">
            <div class="form-group row">
                <div class=" control-label  col-md-3">Profile Type:</div>
                <div class="col-md-9">
                    @Html.DropDownListFor(x => x.ProfileTypeID, new SelectList(ViewBag.ProfileTypeList, "Id", "Name"), new { @class = "form-control", @required = "required",onChange="ShowHidePageIdControl()" })
                </div>
            </div>
            <div class="form-group row">
                <div class="control-label  col-md-3">Time(In Minutes):</div>
                <div class="col-md-9">
                    @Html.TextBoxFor(x => x.Interval, new { @class = "form-control",required="required",@type="number" })
                    
                </div>
            </div>
            <div class="form-group row" id="divpageid">
                <div class="control-label col-sm-3">
                    PageId:
                </div>
                <div class="col-md-9">
                    @Html.TextBoxFor(x => x.PageId, new { @class = "form-control",required="required" })
                </div>
            </div>
            <div class="form-group row" id="divimagegroup" style="display: none">
                <label class="control-label col-sm-3">Image Groups :</label>
                <div class="col-sm-9">
                    @Html.ListBox("ImgGroups", (MultiSelectList)ViewBag.ImageGroups, new { @class = "form-control"})
                </div>
            </div>

            <div class="form-group row" id="divtextgroup" style="display: none">
                <label class="control-label col-sm-3" for="email">Text Groups :</label>
                <div class="col-sm-9">
                    @Html.ListBox("textGroups", (MultiSelectList)ViewBag.TextGroups, new { @class = "form-control" })
                </div>
            </div>


            <div class="form-group row">
                <div class="col-md-3"></div>
                <div class="col-md-9">
                    <input type="submit" name="Register" value="Register" />
                    @*<input type="button" name="name" onclick="fbLogin()" value="Register" />*@
                </div>
            </div>

        </div>
    </div>
@Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.AccessToken)
    @Html.HiddenFor(x => x.UserId)
    @Html.HiddenFor(x => x.Username)

    <div class="panel panel-default">
        <div class="panel-heading">User Profile List</div>
        <div class="panel-body">

            <table id="ListTable" class="display">
                <thead>
                    <tr>
                        <td>Profile Type</td>
                        <td>Username</td>
                        <td>Action</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in userProfileList)
                    {
                    <tr>
                        <td>@item.ProfileName.Name
                        </td>
                        <td>@item.Username
                        </td>
                        <td>
                            <input type="button" name="name" onclick="EditProfile(@item.ProfileTypeID,'@item.PageId',@item.Id,@item.Interval)" class="btn btn-primary" value="Edit" />
                            <input type="button" name="name" onclick="DeleteProfile(@item.Id)" class="btn btn-primary" value="Unregister" />
                        </td>
                    </tr>

                    }
                </tbody>
            </table>

        </div>
    </div>
}

<script>
    //EDIT CODE COMMENTED
    function EditProfile(profileTypeid, pageid, id,interval) {
        debugger;
        $("#ProfileTypeID").val(profileTypeid);
        $("#PageId").val(pageid);
        $("#Interval").val(interval);
        $("#Id").val(id);
        ShowHidePageIdControl();
        $("#ProfileTypeID").attr('disabled','disabled');
        $("#divimagegroup").show();
        $("#divtextgroup").show();
        $("#profileform").attr('action','../Profile/Update');
        SetSelectedGroup(id);
    }

    function SetSelectedGroup(id) {
        var profileId = JSON.stringify(id);
        $.ajax({
            type: "POST",
            url: "../Profile/GetSelectedGroups",
            data: { profileId: profileId },
            dataType: "json",
            success: function (response) {
                debugger;
                var values=JSON.parse(response);
                var imgIds=values.split("||")[0].split(",");
                var txtIds=values.split("||")[1].split(",");
                $("#ImgGroups").val(imgIds);
                $("#textGroups").val(txtIds);
            },
            error: function (err) {
                alert("Error")
            }
        });
    }
    
    // DELETE THE PROFILE
    function DeleteProfile(id) {
        if (confirm("Do you want to delete record?"))
            location.href = "../Profile/Delete/" + id;
    }

    //Facebook Login
    function fbLogin() {
        FB.login(function (response) {
          
            var userId, accessToken, userName;
            var data = {};
            if (response.authResponse) {
                userId = response.authResponse.userID;
                accessToken = response.authResponse.accessToken;
                FB.api('/me', function (response) {
                    userName = response.name;
                    data = {
                        UserId: userId,
                        AccessToken: accessToken,
                        Username: userName,
                        ProfileTypeID: $("#ProfileTypeID").val()
                    }
                    RegisterUser(data)
                    FB.logout(function (response) {
                        console.log('User Logout.');
                    });
                });

            } else {
                console.log('User cancelled login or did not fully authorize.');
            }

        });
    }

    //function RegisterUser(data) {
    //    var stringdata = JSON.stringify(data);
    //    $.ajax({
    //        type: "POST",
    //        url: "/Profile/Add",
    //        data: { stringdata: stringdata },
    //        dataType: "json",
    //        success: function (response) {
                
    //            if (response == "Success") {
    //                location.reload();
    //            }
    //            else if (response == "Already Exist")
    //            {
    //                alert("User already exists");
    //            }

    //        },
    //        error: function (err) {
    //            alert("User was  not registered")
    //        }
    //    });
    //}
 
    $(document).ready(function () {
       
        if(location.href.indexOf('#access_token=')>0)
        {
            var url =location.href.replace('#','&');
            location.href=url;
        }
    });
   
    // SAVE THE SERVICE INTERVAL FOR POST
    function SaveServiceInterval() {
     
        var inertvaltime = $("#serviceinterval").val().trim();
        var reg = new RegExp('^[0-9]+$');
        var match=reg.test($("#serviceinterval").val().trim());
        if( $("#serviceinterval").val()&& match)
        {
            $.ajax({
                type: "POST",
                url: "../Profile/SaveInterval",
                data: { inertvaltime:  inertvaltime },
                dataType: "json",
                success: function (response) {
                    alert("Service interval saved");
                    $(".close").click();
                },
                error: function (err) {
                    alert("Service interval not saved")
                }
            });
        }
      
        else
        {
            alert("Invalid input");
        }
    }
    
    function ShowHidePageIdControl() {
        if($("#ProfileTypeID").val()=="1")
        {
            $("#profileform").removeAttr("novalidate");
            $("#divpageid").show();
        }
        else{
            $("#profileform").attr("novalidate","novalidate");
            $("#divpageid").hide();
        }
    }
</script>
